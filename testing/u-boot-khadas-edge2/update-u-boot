#!/bin/sh

verbose=
board=
device=
dryrun=
imagedir=

get_defaults() {
	if [ -z "$device" ]; then
		device=/dev/mmcblk0 ;;
	fi

	if [ -z "$imagedir" ]; then
		imagedir="$(realpath $(dirname $0))"
	fi
}

die() {
	echo "ERROR: $@"
	exit 1
}

usage() {
	get_defaults

	cat <<EOF
usage: $0 [-d|--device <device>] [-i|--imagedir <imagedir>] [-n|--dry-run]

options:

 -d,--device <device>     Specify the device where to install u-boot
                          (current default: ${device:-none})

 -i,--imagedir <imagedir> Specify u-boot image directory
                          (current default: ${imagedir:-none})

 -n,--dry-run             Print commands but don't execute them

EOF
}

while [ $# -gt 0 ]; do
	opt="$1"
	shift
	case "$opt" in
	-d|--device)
		device="$1"
		shift
		;;
	-i|--imagedir)
		imagedir="$1"
		shift
		;;
	-n|--dry-run)
		dryrun="echo"
		;;
        --)
                break
                ;;
        -*)
                usage
                exit 1
                ;;
        esac
done

get_defaults
if [ -z "$device" -o -z "$imagedir" -o  ! -e "$imagedir" ]; then
	usage
	exit 1
fi

if [ -z "$dryrun" ]; then
	echo "Updating u-boot in $device in 3 seconds..."
	sleep 3
fi

(
set -e
[ -e "$imagedir/wandboard" ] || die "wandboard images not installed, apk add u-boot-wandboard"
$dryrun dd if=$imagedir/idblock.bin of=$device seek=64 conv=notrunc status=none
$dryrun dd if=$imagedir/u-boot.img of=$device seek=16384 conv=notrunc status=none
$dryrun sync
) || die "U-Boot installation in $device failed"

[ -z "$dryrun" ] && echo "Completed successfully."
